name: Sherlock Holmes PR Reviewer üïµÔ∏è‚Äç‚ôÇÔ∏è
  run: |
    npm install openai
    node -e "
    import fs from 'fs';
    import OpenAI from 'openai';
    const client = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
    const diff = fs.readFileSync('diff.txt', 'utf8');
    const body = fs.readFileSync('pr_description.txt', 'utf8');
    const prompt = `
    Aqui est√° a descri√ß√£o da PR:
    ${body}

    Aqui est√° o diff da PR:
    ${diff}
    `;
    const completion = await client.chat.completions.create({
      model: 'gpt-4o',
      messages: [{ role: 'system', content: 'Voc√™ √© Sherlock Holmes...' }, { role: 'user', content: prompt }]
    });
    fs.writeFileSync('ia_result.txt', completion.choices[0].message.content);
    "
  env:
    OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

jobs:
  ai_review:
    name: "Sherlock Holmes & Dr. Watson Investigam"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: üß© Checkout do C√≥digo
        uses: actions/checkout@v4

      - name: üîé Baixar Diff da Pull Request
        id: diff
        run: |
          echo "Coletando diffs da PR..."
          gh pr diff ${{ github.event.pull_request.number }} > diff.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üìñ Ler Descri√ß√£o da PR
        id: pr_description
        run: |
          echo "${{ github.event.pull_request.body }}" > pr_description.txt

      - name: üß† An√°lise com IA (Sherlock & Watson)
        id: sherlock_analysis
        uses: openai/openai-compute-action@main
        with:
          system-prompt: |
            Voc√™ √© **Sherlock Holmes**, o famoso detetive do s√©culo XIX, e seu parceiro **John Watson** est√° ao lado.
            Juntos voc√™s recebem *pull requests* para investigar. Seu trabalho √© analisar cada PR com aten√ß√£o, examinando:
              - A descri√ß√£o da PR (se est√° bem detalhada, clara, contextualizada);
              - O diff dos arquivos modificados;
              - Se est√° faltando testes ou tipos TypeScript;
              - Se o c√≥digo segue padr√µes modernos e *clean code*, simplicidade e clareza.

            Voc√™s devem retornar um relat√≥rio que contenha:
              1. Uma sauda√ß√£o cordial (‚ÄúCaro desenvolvedor,‚Äù ou algo no estilo Sherlock/Watson);
              2. Aprecia√ß√£o pelo esfor√ßo (‚ÄúObrigado por submeter este c√≥digo,‚Äù etc.);
              3. Avalia√ß√£o da descri√ß√£o da PR: pontos fortes e onde melhorar;
              4. An√°lise do c√≥digo modificado: elogios, achados, alertas se faltar *tests* ou TypeScript;
              5. Sugest√µes de melhoria concretas, sempre que poss√≠vel;
              6. Se tudo estiver em ordem, elogio final;
              7. Se algo estiver faltando (ex: sem testes ou TS), indicar que o PR **n√£o poder√° ser aprovado** at√© que isso seja corrigido.

            O tom deve ser educado, com leve humor dedutivo, e refer√™ncias ao tema (Sherlock & Watson) s√£o bem-vindas
            (‚ÄúWatson notou que‚Ä¶‚Äù, ‚ÄúHolmes acredita que‚Ä¶‚Äù).
            Use linguagem natural e narrativa envolvente, mas mantenha clareza t√©cnica.
            Evite respostas excessivamente longas, foque em insights √∫teis para o desenvolvedor.

          prompt: |
            Aqui est√° a descri√ß√£o da PR:
            TITLE: ${{ github.event.pull_request.title }}
            BODY:
            ${{ github.event.pull_request.body }}

            Aqui est√° o diff da PR:
            $(cat diff.txt)

            Por favor, realize a investiga√ß√£o completa e forne√ßa o relat√≥rio conforme as instru√ß√µes acima.
          model: openai/gpt-4o

      - name: üí¨ Comentar na PR
        if: success()
        run: |
          echo "Comentando an√°lise na PR..."
          gh pr comment ${{ github.event.pull_request.number }} --body "$(cat ia_result.txt)"
  env:
    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
